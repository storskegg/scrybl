{"version":3,"file":"scrybl.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,SAAU,GAAIH,GACK,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,yMCmFvD,QAxEMC,WACJ,WAAYC,GAAO,Y,4FAAA,SACjB,IACEC,EAIED,EAJFC,UACAC,EAGEF,EAHFE,SACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,IAIF,IAAiB,IAAbF,GAKCG,WAAcA,UAAUC,WAA7B,CAIA,QAAkBC,IAAdN,IAA4BO,MAAMC,QAAQR,GAC5C,MAAM,IAAIS,MAAM,6DAGlB,QAAmBH,IAAfJ,GAAkD,kBAAfA,EACrC,MAAM,IAAIO,MAAM,gEAIlB,GAFAC,KAAKC,cAAgBT,OAETI,IAARH,GAAoC,iBAARA,EAG9B,MAAM,IAAIM,MAAM,0CAFhBC,KAAKE,KAAOT,EAKd,IAAMU,OAA2BP,IAAdN,EAA0BA,EAAY,CAAC,MAAO,OAAQ,OAAQ,QAAS,SACpFc,EAAa5B,OAAO6B,0BAA0BC,OAAOC,SAE3DP,KAAA,KAAeI,EAAU,IAAQjB,MAEjCX,OAAOgC,KAAKJ,GAAYK,SAAQ,SAACnC,QACA,IAApB,EAAK,IAAD,OAAKA,MAClB,EAAK,IAAD,OAAKA,IAAS6B,EAAWO,SAASpC,GAAO8B,EAAW9B,GAAKa,MAAQ,EAAKwB,MAEtER,EAAWO,SAASpC,KACtB,EAAKA,GAAO,WACV,IAAMsC,EAAMC,KAAKC,UAAU,CACzBC,QAASzC,EACT0C,SAAU,MAAF,qBAAMC,aAGhBvB,UAAUC,WAAWK,KAAKE,KAAM,IAAIgB,KAAK,CAACN,GAAM,CAAEO,KAAM,iBAE/B,IAArBnB,KAAKC,aACPD,KAAK,IAAL,OAAS1B,IAAT,MAAA0B,KAAmBiB,iBAO7BzC,OAAO4C,OAAOpB,MACdM,OAAOC,QAAUP,KACjBxB,OAAO4C,OAAOd,OAAOC,U,0CAGvB,YAC2B,IAArBP,KAAKC,aACPM,QAAQc,IAAI,a,sEAnEZjC,G","sources":["webpack://scrybl/webpack/universalModuleDefinition","webpack://scrybl/webpack/bootstrap","webpack://scrybl/webpack/runtime/define property getters","webpack://scrybl/webpack/runtime/hasOwnProperty shorthand","webpack://scrybl/webpack/runtime/make namespace object","webpack://scrybl/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"scrybl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scrybl\"] = factory();\n\telse\n\t\troot[\"scrybl\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Scrybl v2.0.0\n * Apache2 License\n * Copyright (c) William Conrad.\n *\n * Scrybl is a library that overloads the console logging functions with versions that send logs to a target endpoint\n * using the Beacon API. It's very lightweight.\n *\n * @param allowList Array[String] - method names you want to appear in the overloaded object (e.g. log, error, warn).\n *                                  methods not appearing in the allowList are nooped to maintain compatability.\n *                                  Default: ['log', 'info', 'warn', 'error', 'debug']\n * @param disabled Boolean - Allows the library to be instantiated without doing anything at all. Useful as a feature\n *                           flag, in the event a client needs to be released before the consuming API endpoint is ready\n * @param silentMode Boolean - Silences noops for methods not in allowList.\n * @param url String - Endpoint of the consuming API.\n */\nclass Scrybl {\n  constructor(props) {\n    const {\n      allowList,\n      disabled,\n      silentMode,\n      url\n    } = props;\n\n    // If disabled, do nothing.\n    if (disabled === true) {\n      return;\n    }\n\n    // If beacon api isn't available, do nothing.\n    if (!navigator || !navigator.sendBeacon) {\n      return;\n    }\n\n    if (allowList !== undefined && !Array.isArray(allowList)) {\n      throw new Error('Parameter \"allowlist\" must be of type Array, if provided.');\n    }\n\n    if (silentMode !== undefined && typeof silentMode !== 'boolean') {\n      throw new Error('Parameter \"silentMode\" must be of type Boolean, if provided.');\n    }\n    this._silentMode = !!silentMode;\n\n    if (url !== undefined && typeof url !== 'string') {\n      this._url = url;\n    } else {\n      throw new Error('Missing or non-string \"url\" parameter.');\n    }\n\n    const cAllowList = allowList !== undefined ? allowList : ['log', 'info', 'warn', 'error', 'debug'];\n    const cPropDescs = Object.getOwnPropertyDescriptors(window.console);\n\n    this['_log'] = cPropDescs['log'].value;\n\n    Object.keys(cPropDescs).forEach((key) => {\n      if (typeof this[`_${key}`] === 'undefined') {\n        this[`_${key}`] = cAllowList.includes(key) ? cPropDescs[key].value : this._noop;\n\n        if (cAllowList.includes(key)) {\n          this[key] = function () {\n            const msg = JSON.stringify({\n              logType: key,\n              payloads: [...arguments]\n            });\n\n            navigator.sendBeacon(this._url, new Blob([msg], { type: 'text/plain' }));\n\n            if (this._silentMode === false) {\n              this[`_${key}`](...arguments);\n            }\n          };\n        }\n      }\n    });\n\n    Object.freeze(this);\n    window.console = this;\n    Object.freeze(window.console);\n  }\n\n  _noop() {\n    if (this._silentMode !== true) {\n      console.log('Noop');\n    }\n  }\n}\n\nexport default Scrybl;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Scrybl","props","allowList","disabled","silentMode","url","navigator","sendBeacon","undefined","Array","isArray","Error","this","_silentMode","_url","cAllowList","cPropDescs","getOwnPropertyDescriptors","window","console","keys","forEach","includes","_noop","msg","JSON","stringify","logType","payloads","arguments","Blob","type","freeze","log"],"sourceRoot":""}